# BeeSwarm Bot Logic

 rebalance (more advanced later)
if balanceOnchain / TotalUpnlOnchain < 0.3
    pionerV1.deposit():
if balanceBroker / TotalUpnlBroker < 0.3
    send telegram notif ( automatisation later)



    
### Accept Close
for active CloseQuoteSigned
    if (verifyPrice(acceptPrice, brokerPrice, OraclePrice)):
        this.warperCloseQuoteSignedAndAcceptClose():


### Settlement and Liquidation
for all open positions where pA == address or pB == address
    if  Upnl >0 , Upnl > IMB *0.8 or if Upnl <0, |Upnl| > IMA or all open bContract where pA == address or pB == address 
        this.wrapperUpdatePriceAndDefault():


on acceptOpenQuote and acceptCloseQuote -> convert underlying quote_target amount to target

cancelOpenCloseQuoteContractManager():
cancelSignedMessageCloseManager():
cancelOpenQuoteManage():
cancelSignedMessageOpenManager():
on cancelOpenQuote and cancelOpenCloseQuote -> 
    1/ reduce quote_target_open
    2/ if quote_target > quote_target_open
        push acceptOpenQuote and opacceptCloseQuote on enough amount to get (quote_target - quote_target_open) >0

// SignedQuote Storage
    Store signed quote and defined a fill price.
    If canceled or filled delete
    If price reach fill price call acceptQuoteSigned








function cancelOpenOrders(){

    }

function hedgeInventory(){
    
    }


1// priorize reducing row with other types in this order of importance.
cancelCloseQuoteContracts
    // pioner.hedger.cancel_all_orders(symbol)
    // verify closeQuote is open
    // openAmount = pioner.hedger.get_open_amount(symbol)
    // openAmount -= cancelAmount
    // if openAmount > 0
        pioner.hedger.add_trade(symbol, openAmount, price, side)
    // assess how  much is filled
cancelOpenQuoteContracts
    // verify position is open
cancelCloseQuoteSigneds
    // verify closeQuote is open
cancelOpenQuoteSigneds
    // verify position is open
closeQuoteContracts
    // verify market is open
    // verify position is open
    // verify other closeQuoteContracts on that id
    // pioner.hedger.add_trade(symbol, volume, price, side)
    // ( kid ) wait for fill

openQuoteContracts
    // verify market is open
    // verify price
    // verify our riks level ( health balance )
    // verify parameters
    // pioner.hedger.add_trade(symbol, volume, price, side)
    // pioner.blockchain.accept_quote()
closeQuoteSigneds
    // verify position is open
    // pioner.hedger.add_trade(symbol, volume, price, side)
    // pioner.blockchain.accept_signed_close_quote()
openQuoteSigneds
    // pioner.hedger.add_trade(symbol, volume, price, side)
    // pioner.client.send_accept_signed_quote()
rfq
    // pioner.hedger.verify_trade_openable(symbol, volume, price)


// define amount of hedge to cancel if not filled


// check if it can fill a trade waiting in the queue
// function to update fill on broker from new queue

function inventoryCheckRoutine(){ // every minutes
    // check contracts state onchain
    // check contract have not been cancelled
    // check amount to hedge, if we have enough inventory
    // check if need to update orders in inventory
}

